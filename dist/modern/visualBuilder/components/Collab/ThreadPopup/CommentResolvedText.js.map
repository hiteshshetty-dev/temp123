{"version":3,"sources":["../../../../../../src/visualBuilder/components/Collab/ThreadPopup/CommentResolvedText.tsx"],"sourcesContent":["/** @jsxImportSource preact */\nimport { useMemo } from \"preact/hooks\";\nimport { ICommentResolvedText } from \"../../../types/collab.types\";\nimport { getMessageWithDisplayName } from \"../../../utils/collabUtils\";\nimport { collabStyles } from \"../../../collab.style\";\nimport classNames from \"classnames\";\n\nconst CommentResolvedText = ({ comment, userState }: ICommentResolvedText) => {\n    const sanitizedText = useMemo(() => {\n        return getMessageWithDisplayName(comment, userState, \"html\") ?? \"\";\n    }, [comment.message, userState.userMap, comment.toUsers]);\n\n    return (\n        <div\n            data-testid={\"collab-thread-comment--message\"}\n            className={classNames(\n                \"collab-thread-comment--message\",\n                collabStyles()[\"collab-thread-comment--message\"]\n            )}\n            dangerouslySetInnerHTML={{ __html: sanitizedText }}\n        ></div>\n    );\n};\n\nexport default CommentResolvedText;\n"],"mappings":";;;AACA,SAAS,eAAe;AAExB,SAAS,iCAAiC;AAC1C,SAAS,oBAAoB;AAC7B,OAAO,gBAAgB;AAQf;AANR,IAAM,sBAAsB,CAAC,EAAE,SAAS,UAAU,MAA4B;AAC1E,QAAM,gBAAgB,QAAQ,MAAM;AAChC,WAAO,0BAA0B,SAAS,WAAW,MAAM,KAAK;AAAA,EACpE,GAAG,CAAC,QAAQ,SAAS,UAAU,SAAS,QAAQ,OAAO,CAAC;AAExD,SACI;AAAA,IAAC;AAAA;AAAA,MACG,eAAa;AAAA,MACb,WAAW;AAAA,QACP;AAAA,QACA,aAAa,EAAE,gCAAgC;AAAA,MACnD;AAAA,MACA,yBAAyB,EAAE,QAAQ,cAAc;AAAA;AAAA,EACpD;AAET;AAEA,IAAO,8BAAQ;","names":[]}