{"version":3,"sources":["../../../../../../src/visualBuilder/components/Collab/ThreadPopup/ThreadHeader.tsx"],"sourcesContent":["/** @jsxImportSource preact */\nimport React from \"preact/compat\";\nimport { useCallback, useState } from \"preact/hooks\";\nimport classNames from \"classnames\";\nimport ThreadActionBar from \"./ThreadActionBar\";\nimport { collabStyles, flexAlignCenter } from \"../../../collab.style\";\nimport { IThreadHeader } from \"../../../types/collab.types\";\n\nconst ThreadHeader: React.FC<IThreadHeader> = React.memo(\n    ({ onClose, displayResolve, onResolve, commentCount, activeThread }) => {\n        const [isResolving, setIsResolving] = useState(false);\n\n        const handleResolve = useCallback(async () => {\n            if (isResolving) return;\n\n            try {\n                setIsResolving(true);\n                const payload = {\n                    threadUid: activeThread._id,\n                    payload: { threadState: 2 },\n                };\n                await onResolve(payload);\n            } finally {\n                onClose(true);\n                setIsResolving(false);\n            }\n        }, [activeThread, isResolving, onResolve, onClose]);\n\n        return (\n            <div\n                className={classNames(\n                    \"collab-thread-header--wrapper\",\n                    \"flex-v-center\",\n                    collabStyles()[\"collab-thread-header--wrapper\"],\n                    flexAlignCenter\n                )}\n            >\n                <div\n                    className={classNames(\n                        \"collab-thread-header--container\",\n                        \"flex-v-center\",\n                        collabStyles()[\"collab-thread-header--container\"],\n                        flexAlignCenter\n                    )}\n                >\n                    <ThreadActionBar\n                        commentCount={commentCount}\n                        displayResolve={displayResolve}\n                        handleResolve={handleResolve}\n                        isResolving={isResolving}\n                    />\n                </div>\n            </div>\n        );\n    }\n);\n\nexport default ThreadHeader;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAkB;AAClB,mBAAsC;AACtC,wBAAuB;AACvB,6BAA4B;AAC5B,oBAA8C;AAwC1B;AArCpB,IAAM,eAAwC,cAAAA,QAAM;AAAA,EAChD,CAAC,EAAE,SAAS,gBAAgB,WAAW,cAAc,aAAa,MAAM;AACpE,UAAM,CAAC,aAAa,cAAc,QAAI,uBAAS,KAAK;AAEpD,UAAM,oBAAgB,0BAAY,YAAY;AAC1C,UAAI,YAAa;AAEjB,UAAI;AACA,uBAAe,IAAI;AACnB,cAAM,UAAU;AAAA,UACZ,WAAW,aAAa;AAAA,UACxB,SAAS,EAAE,aAAa,EAAE;AAAA,QAC9B;AACA,cAAM,UAAU,OAAO;AAAA,MAC3B,UAAE;AACE,gBAAQ,IAAI;AACZ,uBAAe,KAAK;AAAA,MACxB;AAAA,IACJ,GAAG,CAAC,cAAc,aAAa,WAAW,OAAO,CAAC;AAElD,WACI;AAAA,MAAC;AAAA;AAAA,QACG,eAAW,kBAAAC;AAAA,UACP;AAAA,UACA;AAAA,cACA,4BAAa,EAAE,+BAA+B;AAAA,UAC9C;AAAA,QACJ;AAAA,QAEA;AAAA,UAAC;AAAA;AAAA,YACG,eAAW,kBAAAA;AAAA,cACP;AAAA,cACA;AAAA,kBACA,4BAAa,EAAE,iCAAiC;AAAA,cAChD;AAAA,YACJ;AAAA,YAEA;AAAA,cAAC,uBAAAC;AAAA,cAAA;AAAA,gBACG;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;AAAA,YACJ;AAAA;AAAA,QACJ;AAAA;AAAA,IACJ;AAAA,EAER;AACJ;AAEA,IAAO,uBAAQ;","names":["React","classNames","ThreadActionBar"]}