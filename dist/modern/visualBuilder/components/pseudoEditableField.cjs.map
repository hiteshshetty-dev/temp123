{"version":3,"sources":["../../../../src/visualBuilder/components/pseudoEditableField.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport getCamelCaseStyles from \"../utils/getCamelCaseStyles\";\nimport getStyleOfAnElement from \"../utils/getStyleOfAnElement\";\nimport React from \"preact/compat\";\nimport { visualBuilderStyles } from \"../visualBuilder.style\";\n\ninterface PseudoEditableFieldProps {\n    editableElement: HTMLElement;\n    config: { textContent: string };\n}\n\nfunction PseudoEditableFieldComponent(\n    props: PseudoEditableFieldProps\n): JSX.Element {\n    const styles = getCamelCaseStyles(\n        getStyleOfAnElement(props.editableElement)\n    );\n    // Get the offsetTop and offsetLeft of the editable element and set the position of the pseudo editable element\n    // The pseudo editable element is positioned absolutely at the same location as the editable element\n    const rect = props.editableElement.getBoundingClientRect();\n\n    styles.position = \"absolute\";\n    styles.top = `${rect.top + window.scrollY}px`;\n    styles.left = `${rect.left + window.scrollX}px`;\n    // setting height to auto so that the element can grow based on the content\n    // and the resize observer can detect the change in height\n    styles.height = \"auto\";\n    styles.whiteSpace = \"pre-line\"\n    styles.textTransform = \"none\"\n\n    return (\n        <div\n            className={\n                classNames(\"visual-builder__pseudo-editable-element\", visualBuilderStyles()[\"visual-builder__pseudo-editable-element\"])\n            }\n            data-testid=\"visual-builder__pseudo-editable-element\"\n            style={styles}\n        >\n            {props.config.textContent}\n        </div>\n    );\n}\n\nexport default PseudoEditableFieldComponent;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAuB;AACvB,gCAA+B;AAC/B,iCAAgC;AAEhC,2BAAoC;AA2B5B;AApBR,SAAS,6BACL,OACW;AACX,QAAM,aAAS,0BAAAA;AAAA,QACX,2BAAAC,SAAoB,MAAM,eAAe;AAAA,EAC7C;AAGA,QAAM,OAAO,MAAM,gBAAgB,sBAAsB;AAEzD,SAAO,WAAW;AAClB,SAAO,MAAM,GAAG,KAAK,MAAM,OAAO,OAAO;AACzC,SAAO,OAAO,GAAG,KAAK,OAAO,OAAO,OAAO;AAG3C,SAAO,SAAS;AAChB,SAAO,aAAa;AACpB,SAAO,gBAAgB;AAEvB,SACI;AAAA,IAAC;AAAA;AAAA,MACG,eACI,kBAAAC,SAAW,+CAA2C,0CAAoB,EAAE,yCAAyC,CAAC;AAAA,MAE1H,eAAY;AAAA,MACZ,OAAO;AAAA,MAEN,gBAAM,OAAO;AAAA;AAAA,EAClB;AAER;AAEA,IAAO,8BAAQ;","names":["getCamelCaseStyles","getStyleOfAnElement","classNames"]}