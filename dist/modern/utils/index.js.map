{"version":3,"sources":["../../../src/utils/index.ts"],"sourcesContent":["import { PublicLogger } from \"../logger/logger\";\n\nexport function hasWindow(): boolean {\n    return typeof window !== \"undefined\";\n}\nexport function addLivePreviewQueryTags(link: string): string {\n    try {\n        const docUrl: URL = new URL(document.location.href);\n        const newUrl: URL = new URL(link);\n        const livePreviewHash: string | null =\n            docUrl.searchParams.get(\"live_preview\");\n        const ctUid: string | null =\n            docUrl.searchParams.get(\"content_type_uid\");\n        const entryUid: string | null = docUrl.searchParams.get(\"entry_uid\");\n        if (livePreviewHash && ctUid && entryUid) {\n            newUrl.searchParams.set(\"live_preview\", livePreviewHash);\n            newUrl.searchParams.set(\"content_type_uid\", ctUid);\n            newUrl.searchParams.set(\"entry_uid\", entryUid);\n        }\n        return newUrl.href;\n    } catch (error) {\n        PublicLogger.error(\"Error while adding live preview to URL\");\n        return link;\n    }\n}\nexport function addParamsToUrl() {\n    // Setting the query params to all the click events related to current domain\n    window.addEventListener(\"click\", (event: any) => {\n        const target: any = event.target;\n        const targetHref: string | any = target.href;\n        const docOrigin: string = document.location.origin;\n        if (\n            targetHref &&\n            targetHref.includes(docOrigin) &&\n            !targetHref.includes(\"live_preview\")\n        ) {\n            const newUrl = addLivePreviewQueryTags(target.href);\n            event.target.href = newUrl || target.href;\n        }\n    });\n}\nexport function isOpeningInTimeline(): boolean {\n    if (hasWindow()) {\n        const urlParams = new URLSearchParams(window.location.search);\n        const previewTimestamp = urlParams.get(\"preview_timestamp\");\n        return !!previewTimestamp;\n    }\n    return false;\n}"],"mappings":";;;AAAA,SAAS,oBAAoB;AAEtB,SAAS,YAAqB;AACjC,SAAO,OAAO,WAAW;AAC7B;AACO,SAAS,wBAAwB,MAAsB;AAC1D,MAAI;AACA,UAAM,SAAc,IAAI,IAAI,SAAS,SAAS,IAAI;AAClD,UAAM,SAAc,IAAI,IAAI,IAAI;AAChC,UAAM,kBACF,OAAO,aAAa,IAAI,cAAc;AAC1C,UAAM,QACF,OAAO,aAAa,IAAI,kBAAkB;AAC9C,UAAM,WAA0B,OAAO,aAAa,IAAI,WAAW;AACnE,QAAI,mBAAmB,SAAS,UAAU;AACtC,aAAO,aAAa,IAAI,gBAAgB,eAAe;AACvD,aAAO,aAAa,IAAI,oBAAoB,KAAK;AACjD,aAAO,aAAa,IAAI,aAAa,QAAQ;AAAA,IACjD;AACA,WAAO,OAAO;AAAA,EAClB,SAAS,OAAO;AACZ,iBAAa,MAAM,wCAAwC;AAC3D,WAAO;AAAA,EACX;AACJ;AACO,SAAS,iBAAiB;AAE7B,SAAO,iBAAiB,SAAS,CAAC,UAAe;AAC7C,UAAM,SAAc,MAAM;AAC1B,UAAM,aAA2B,OAAO;AACxC,UAAM,YAAoB,SAAS,SAAS;AAC5C,QACI,cACA,WAAW,SAAS,SAAS,KAC7B,CAAC,WAAW,SAAS,cAAc,GACrC;AACE,YAAM,SAAS,wBAAwB,OAAO,IAAI;AAClD,YAAM,OAAO,OAAO,UAAU,OAAO;AAAA,IACzC;AAAA,EACJ,CAAC;AACL;AACO,SAAS,sBAA+B;AAC3C,MAAI,UAAU,GAAG;AACb,UAAM,YAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM;AAC5D,UAAM,mBAAmB,UAAU,IAAI,mBAAmB;AAC1D,WAAO,CAAC,CAAC;AAAA,EACb;AACA,SAAO;AACX;","names":[]}