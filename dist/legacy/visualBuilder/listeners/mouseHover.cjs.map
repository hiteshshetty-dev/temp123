{"version":3,"sources":["../../../../src/visualBuilder/listeners/mouseHover.ts"],"sourcesContent":["import { throttle } from \"lodash-es\";\nimport { getCsDataOfElement } from \"../utils/getCsDataOfElement\";\nimport { removeAddInstanceButtons } from \"../utils/multipleElementAddButton\";\nimport { generateCustomCursor } from \"../generators/generateCustomCursor\";\nimport { FieldSchemaMap } from \"../utils/fieldSchemaMap\";\nimport { isFieldDisabled } from \"../utils/isFieldDisabled\";\nimport { getFieldType } from \"../utils/getFieldType\";\n\nimport EventListenerHandlerParams from \"./types\";\nimport { VisualBuilder } from \"..\";\nimport { addHoverOutline } from \"../generators/generateHoverOutline\";\nimport { visualBuilderStyles } from \"../visualBuilder.style\";\nimport { VB_EmptyBlockParentClass } from \"../..\";\nimport Config from \"../../configManager/configManager\";\nimport { isCollabThread } from \"../generators/generateThread\";\nimport { getEntryPermissionsCached } from \"../utils/getEntryPermissionsCached\";\nimport { EntryPermissions } from \"../utils/getEntryPermissions\";\n\nconst config = Config.get();\nexport interface HandleMouseHoverParams\n    extends Pick<\n        EventListenerHandlerParams,\n        \"event\" | \"overlayWrapper\" | \"visualBuilderContainer\"\n    > {\n    customCursor: HTMLDivElement | null;\n}\n\nfunction resetCustomCursor(customCursor: HTMLDivElement | null): void {\n    if (customCursor) {\n        generateCustomCursor({\n            fieldType: \"empty\",\n            customCursor: customCursor,\n        });\n    }\n}\n\nfunction collabCustomCursor(customCursor: HTMLDivElement | null): void {\n    if (!customCursor) return;\n\n    generateCustomCursor({\n        fieldType: \"discussion\",\n        customCursor: customCursor,\n    });\n}\n\nfunction handleCursorPosition(\n    event: MouseEvent,\n    customCursor: HTMLDivElement | null\n): void {\n    if (customCursor) {\n        const mouseY = event.clientY;\n        const mouseX = event.clientX;\n\n        customCursor.style.left = `${mouseX}px`;\n        customCursor.style.top = `${mouseY}px`;\n    }\n}\n\nfunction addOutline(editableElement: Element, isFieldDisabled?: boolean): void {\n    if (!editableElement) return;\n\n    addHoverOutline(editableElement as HTMLElement, isFieldDisabled);\n}\n\nfunction hideDefaultCursor(): void {\n    if (\n        document?.body &&\n        !document.body.classList.contains(\n            visualBuilderStyles()[\"visual-builder__default-cursor--disabled\"]\n        )\n    )\n        document.body.classList.add(\n            visualBuilderStyles()[\"visual-builder__default-cursor--disabled\"]\n        );\n}\n\nfunction showDefaultCursor(): void {\n    if (\n        document?.body &&\n        document.body.classList.contains(\n            visualBuilderStyles()[\"visual-builder__default-cursor--disabled\"]\n        )\n    )\n        document.body.classList.remove(\n            visualBuilderStyles()[\"visual-builder__default-cursor--disabled\"]\n        );\n}\n\nexport function hideHoverOutline(\n    visualBuilderContainer: HTMLDivElement | null\n): void {\n    if (!visualBuilderContainer) {\n        return;\n    }\n    const hoverOutline = visualBuilderContainer.querySelector(\n        \".visual-builder__hover-outline\"\n    );\n    if (!hoverOutline) {\n        return;\n    }\n    hoverOutline.classList.add(\n        visualBuilderStyles()[\"visual-builder__hover-outline--hidden\"]\n    );\n}\n\nexport function hideCustomCursor(customCursor: HTMLDivElement | null): void {\n    showDefaultCursor();\n    customCursor?.classList.remove(\"visible\");\n}\n\nexport function showCustomCursor(customCursor: HTMLDivElement | null): void {\n    hideDefaultCursor();\n    if (\n        config.collab.enable &&\n        (!config.collab.isFeedbackMode || config.collab.pauseFeedback)\n    )\n        return;\n    customCursor?.classList.add(\"visible\");\n}\n\nfunction isOverlay(target: HTMLElement): boolean {\n    return target.classList.contains(\"visual-builder__overlay\");\n}\n\nfunction isContentEditable(target: HTMLElement): boolean {\n    if (target.hasAttribute(\"contenteditable\"))\n        return target.getAttribute(\"contenteditable\") === \"true\";\n    return false;\n}\n\nasync function handleMouseHover(params: HandleMouseHoverParams): Promise<void> {\n    throttle(async (params: HandleMouseHoverParams) => {\n        const eventDetails = getCsDataOfElement(params.event);\n        const eventTarget = params.event.target as HTMLElement | null;\n\n        if (config?.collab.enable && config?.collab.pauseFeedback) {\n            hideCustomCursor(params.customCursor);\n            return;\n        }\n        if (!eventDetails) {\n            if (\n                eventTarget &&\n                (isOverlay(eventTarget) ||\n                    isContentEditable(eventTarget) ||\n                    isCollabThread(eventTarget))\n            ) {\n                handleCursorPosition(params.event, params.customCursor);\n                hideCustomCursor(params.customCursor);\n                return;\n            }\n            if (!config?.collab.enable) {\n                resetCustomCursor(params.customCursor);\n            }\n            removeAddInstanceButtons({\n                eventTarget: params.event.target,\n                visualBuilderContainer: params.visualBuilderContainer,\n                overlayWrapper: params.overlayWrapper,\n            });\n            handleCursorPosition(params.event, params.customCursor);\n            if (config?.collab.enable && config?.collab.isFeedbackMode) {\n                showCustomCursor(params.customCursor);\n                collabCustomCursor(params.customCursor);\n            }\n            return;\n        }\n\n        const { editableElement, fieldMetadata } = eventDetails;\n        const { content_type_uid, fieldPath } = fieldMetadata;\n\n        if (\n            VisualBuilder.VisualBuilderGlobalState.value\n                .previousSelectedEditableDOM &&\n            VisualBuilder.VisualBuilderGlobalState.value.previousSelectedEditableDOM.isSameNode(\n                editableElement\n            )\n        ) {\n            hideCustomCursor(params.customCursor);\n            return;\n        }\n\n        if (params.customCursor) {\n            const elementUnderCursor = document.elementFromPoint(\n                params.event.clientX,\n                params.event.clientY\n            );\n            if (elementUnderCursor) {\n                if (\n                    elementUnderCursor.nodeName === \"A\" ||\n                    elementUnderCursor.nodeName === \"BUTTON\"\n                ) {\n                    elementUnderCursor.classList.add(\n                        visualBuilderStyles()[\"visual-builder__no-cursor-style\"]\n                    );\n                }\n            }\n\n            if (config?.collab.enable && config?.collab.isFeedbackMode) {\n                collabCustomCursor(params.customCursor);\n                handleCursorPosition(params.event, params.customCursor);\n                showCustomCursor(params.customCursor);\n                return;\n            } else if (\n                config?.collab.enable &&\n                !config?.collab.isFeedbackMode\n            ) {\n                hideCustomCursor(params.customCursor);\n                return;\n            }\n\n            if (\n                VisualBuilder.VisualBuilderGlobalState.value\n                    .previousHoveredTargetDOM !== editableElement\n            ) {\n                resetCustomCursor(params.customCursor);\n                removeAddInstanceButtons({\n                    eventTarget: params.event.target,\n                    visualBuilderContainer: params.visualBuilderContainer,\n                    overlayWrapper: params.overlayWrapper,\n                });\n            }\n\n            if (!FieldSchemaMap.hasFieldSchema(content_type_uid, fieldPath)) {\n                generateCustomCursor({\n                    fieldType: \"loading\",\n                    customCursor: params.customCursor,\n                });\n            }\n\n            /**\n             * We called it seperately inside the code block to ensure that\n             * the code will not wait for the promise to resolve.\n             * If we get a cache miss, we will send a message to the iframe\n             * without blocking the code.\n             */\n            FieldSchemaMap.getFieldSchema(content_type_uid, fieldPath).then(\n                (fieldSchema) => {\n                    if (!fieldSchema) return;\n\n                    let entryAcl: EntryPermissions | undefined;\n                    getEntryPermissionsCached({\n                        entryUid: fieldMetadata.entry_uid,\n                        contentTypeUid: fieldMetadata.content_type_uid,\n                        locale: fieldMetadata.locale,\n                    })\n                        .then((data) => {\n                            entryAcl = data;\n                        })\n                        .catch((error) => {\n                            console.error(\n                                \"[Visual Builder] Error retrieving entry permissions:\",\n                                error\n                            );\n                        })\n                        .finally(() => {\n                            if (!params.customCursor) return;\n                            const { isDisabled: fieldDisabled } =\n                                isFieldDisabled(\n                                    fieldSchema,\n                                    eventDetails,\n                                    entryAcl\n                                );\n                            const fieldType = getFieldType(fieldSchema);\n                            generateCustomCursor({\n                                fieldType,\n                                customCursor: params.customCursor,\n                                fieldDisabled,\n                            });\n                        });\n                }\n            );\n\n            handleCursorPosition(params.event, params.customCursor);\n            showCustomCursor(params.customCursor);\n        }\n\n        if (\n            !editableElement.classList.contains(VB_EmptyBlockParentClass) &&\n            !editableElement.classList.contains(\"visual-builder__empty-block\")\n        ) {\n            addOutline(editableElement);\n            FieldSchemaMap.getFieldSchema(content_type_uid, fieldPath).then(\n                (fieldSchema) => {\n                    let entryAcl: EntryPermissions | undefined;\n                    if (!fieldSchema) return;\n                    getEntryPermissionsCached({\n                        entryUid: fieldMetadata.entry_uid,\n                        contentTypeUid: fieldMetadata.content_type_uid,\n                        locale: fieldMetadata.locale,\n                    })\n                        .then((data) => {\n                            entryAcl = data;\n                        })\n                        .catch((error) => {\n                            console.error(\n                                \"[Visual Builder] Error retrieving entry permissions:\",\n                                error\n                            );\n                        })\n                        .finally(() => {\n                            const { isDisabled: fieldDisabled } =\n                                isFieldDisabled(\n                                    fieldSchema,\n                                    eventDetails,\n                                    entryAcl\n                                );\n                            addOutline(editableElement, fieldDisabled);\n                        });\n                }\n            );\n        }\n\n        if (\n            VisualBuilder.VisualBuilderGlobalState.value\n                .previousHoveredTargetDOM === editableElement\n        ) {\n            return;\n        }\n\n        VisualBuilder.VisualBuilderGlobalState.value.previousHoveredTargetDOM =\n            editableElement;\n    }, 10)(params);\n}\n\nexport default handleMouseHover;\n"],"mappings":"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","names":["import__","Config","isFieldDisabled","params"]}