{"version":3,"sources":["../../../../src/visualBuilder/components/HighlightedCommentIcon.tsx"],"sourcesContent":["import { h } from \"preact\";\nimport { VNode } from \"preact\";\nimport { HighlightCommentIcon } from \"./icons\";\nimport React from \"preact/compat\";\nimport visualBuilderPostMessage from \"../utils/visualBuilderPostMessage\";\nimport { VisualBuilderPostMessageEvents } from \"../utils/types/postMessage.types\";\nimport { IHighlightCommentData } from \"../eventManager/useHighlightCommentIcon\";\nimport Config from \"../../configManager/configManager\";\nimport { toggleCollabPopup } from \"../generators/generateThread\";\n\nconst HighlightedCommentIcon = (props: {\n    data: IHighlightCommentData;\n}): VNode => {\n    const { data } = props;\n    const config = Config.get();\n\n    const handleCommentModal = async () => {\n        visualBuilderPostMessage?.send(\n            VisualBuilderPostMessageEvents.OPEN_FIELD_COMMENT_MODAL,\n            {\n                fieldMetadata: data?.fieldMetadata,\n                discussion: data?.discussion,\n                fieldSchema: data?.fieldSchema,\n                absolutePath: data.absolutePath,\n            }\n        );\n\n        toggleCollabPopup({ threadUid: \"\", action: \"close\" });\n        Config.set(\"collab.isFeedbackMode\", true);\n    };\n    return (\n        <div className=\"collab-icon\" onClick={handleCommentModal}>\n            <HighlightCommentIcon />\n        </div>\n    );\n};\n\nexport default HighlightedCommentIcon;\n"],"mappings":";;;AAEA,SAAS,4BAA4B;AAErC,OAAO,8BAA8B;AACrC,SAAS,sCAAsC;AAE/C,OAAO,YAAY;AACnB,SAAS,yBAAyB;AAwBtB;AAtBZ,IAAM,yBAAyB,CAAC,UAEnB;AACT,QAAM,EAAE,KAAK,IAAI;AACjB,QAAM,SAAS,OAAO,IAAI;AAE1B,QAAM,qBAAqB,YAAY;AAhB3C;AAiBQ,0DAA0B;AAAA,MACtB,+BAA+B;AAAA,MAC/B;AAAA,QACI,eAAe,6BAAM;AAAA,QACrB,YAAY,6BAAM;AAAA,QAClB,aAAa,6BAAM;AAAA,QACnB,cAAc,KAAK;AAAA,MACvB;AAAA;AAGJ,sBAAkB,EAAE,WAAW,IAAI,QAAQ,QAAQ,CAAC;AACpD,WAAO,IAAI,yBAAyB,IAAI;AAAA,EAC5C;AACA,SACI,oBAAC,SAAI,WAAU,eAAc,SAAS,oBAClC,8BAAC,wBAAqB,GAC1B;AAER;AAEA,IAAO,iCAAQ;","names":[]}