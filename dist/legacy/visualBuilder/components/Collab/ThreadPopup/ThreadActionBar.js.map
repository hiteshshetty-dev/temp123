{"version":3,"sources":["../../../../../../src/visualBuilder/components/Collab/ThreadPopup/ThreadActionBar.tsx"],"sourcesContent":["/** @jsxImportSource preact */\nimport React from \"preact/compat\";\nimport classNames from \"classnames\";\nimport Button from \"../Button/Button\";\nimport { collabStyles } from \"../../../collab.style\";\nimport { getThreadTitle } from \"../../../utils/collabUtils\";\n\ninterface ThreadActionsProps {\n    commentCount: number;\n    displayResolve: boolean;\n    handleResolve: () => void;\n    isResolving: boolean;\n}\n\nconst ThreadActionBar: React.FC<ThreadActionsProps> = ({\n    commentCount,\n    displayResolve,\n    handleResolve,\n    isResolving,\n}) => {\n    return (\n        <>\n            <div\n                className={classNames(\n                    \"collab-thread-header--title\",\n                    collabStyles()[\"collab-thread-header--title\"]\n                )}\n            >\n                {getThreadTitle(commentCount)}\n            </div>\n            {displayResolve && (\n                <Button\n                    buttonType=\"tertiary\"\n                    className={classNames(\n                        \"collab-thread-header--resolve\",\n                        collabStyles()[\"collab-thread-header--resolve\"]\n                    )}\n                    icon=\"RightMarkActive\"\n                    iconProps={{\n                        className: classNames(\n                            collabStyles()[\n                                \"collab-thread-header--resolve--icon\"\n                            ],\n                            \"collab-thread-header--resolve--icon\"\n                        ),\n                    }}\n                    onClick={handleResolve}\n                    testId=\"collab-thread-resolve-btn\"\n                    isLoading={isResolving}\n                    loadingColor=\"secondary\"\n                >\n                    <span\n                        className={classNames(\n                            \"collab-thread-header--resolve--text\",\n                            collabStyles()[\n                                \"collab-thread-header--resolve--text\"\n                            ]\n                        )}\n                    >\n                        Resolve\n                    </span>\n                </Button>\n            )}\n        </>\n    );\n};\n\nexport default ThreadActionBar;\n"],"mappings":";;;AAEA,OAAO,gBAAgB;AACvB,OAAO,YAAY;AACnB,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAgBvB,mBACI,KADJ;AAPR,IAAM,kBAAgD,CAAC;AAAA,EACnD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,MAAM;AACF,SACI,iCACI;AAAA;AAAA,MAAC;AAAA;AAAA,QACG,WAAW;AAAA,UACP;AAAA,UACA,aAAa,EAAE,6BAA6B;AAAA,QAChD;AAAA,QAEC,yBAAe,YAAY;AAAA;AAAA,IAChC;AAAA,IACC,kBACG;AAAA,MAAC;AAAA;AAAA,QACG,YAAW;AAAA,QACX,WAAW;AAAA,UACP;AAAA,UACA,aAAa,EAAE,+BAA+B;AAAA,QAClD;AAAA,QACA,MAAK;AAAA,QACL,WAAW;AAAA,UACP,WAAW;AAAA,YACP,aAAa,EACT,qCACJ;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,SAAS;AAAA,QACT,QAAO;AAAA,QACP,WAAW;AAAA,QACX,cAAa;AAAA,QAEb;AAAA,UAAC;AAAA;AAAA,YACG,WAAW;AAAA,cACP;AAAA,cACA,aAAa,EACT,qCACJ;AAAA,YACJ;AAAA,YACH;AAAA;AAAA,QAED;AAAA;AAAA,IACJ;AAAA,KAER;AAER;AAEA,IAAO,0BAAQ;","names":[]}