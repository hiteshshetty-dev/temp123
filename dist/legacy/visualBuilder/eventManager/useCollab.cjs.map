{"version":3,"sources":["../../../../src/visualBuilder/eventManager/useCollab.ts"],"sourcesContent":["import visualBuilderPostMessage from \"../utils/visualBuilderPostMessage\";\nimport { VisualBuilderPostMessageEvents } from \"../utils/types/postMessage.types\";\nimport Config from \"../../configManager/configManager\";\nimport {\n    removeAllCollabIcons,\n    hideAllCollabIcons,\n    removeCollabIcon,\n    HighlightThread,\n    showAllCollabIcons,\n} from \"../generators/generateThread\";\nimport {\n    generateThread,\n    handleMissingThreads,\n} from \"../generators/generateThread\";\nimport {\n    IThreadDTO,\n    ICollabConfig,\n    IThreadIdentifier,\n    IThreadRemove,\n    IThreadReopen,\n} from \"../types/collab.types\";\nimport { OnEvent } from \"@contentstack/advanced-post-message\";\n\nconst handleRemoveCommentIcons = (fromShare: boolean = false): void => {\n    if (fromShare) {\n        hideAllCollabIcons();\n        return;\n    }\n    removeAllCollabIcons();\n};\n\nexport const useCollab = () => {\n    const config = Config.get();\n    const collabEnable = visualBuilderPostMessage?.on(\n        VisualBuilderPostMessageEvents.COLLAB_ENABLE,\n        (data: OnEvent<ICollabConfig>) => {\n            if (!data?.data?.collab) {\n                console.error(\"Invalid collab data structure:\", data);\n                return;\n            }\n            if (data?.data?.collab?.fromShare) {\n                Config.set(\n                    \"collab.pauseFeedback\",\n                    data?.data?.collab?.pauseFeedback\n                );\n                showAllCollabIcons();\n                return;\n            }\n\n            Config.set(\"collab.enable\", data.data.collab.enable ?? false);\n            Config.set(\n                \"collab.isFeedbackMode\",\n                data.data.collab.isFeedbackMode ?? false\n            );\n            Config.set(\n                \"collab.pauseFeedback\",\n                data?.data?.collab?.pauseFeedback\n            );\n            Config.set(\n                \"collab.inviteMetadata\",\n                data.data.collab.inviteMetadata\n            );\n        }\n    );\n\n    const collabPayload = visualBuilderPostMessage?.on(\n        VisualBuilderPostMessageEvents.COLLAB_DATA_UPDATE,\n        (data: OnEvent<ICollabConfig>) => {\n            if (!config?.collab?.enable) return;\n\n            if (!data?.data?.collab) {\n                console.error(\"Invalid collab data structure:\", data);\n                return;\n            }\n\n            if (data?.data?.collab?.inviteMetadata) {\n                Config.set(\n                    \"collab.inviteMetadata\",\n                    data?.data?.collab?.inviteMetadata\n                );\n                return;\n            }\n\n            const missingThreadIds =\n                data?.data?.collab?.payload\n                    ?.map((payload: IThreadDTO) => generateThread(payload))\n                    .filter((id): id is string => id !== undefined) || [];\n            if (missingThreadIds.length > 0) {\n                handleMissingThreads({\n                    payload: { isElementPresent: false },\n                    threadUids: missingThreadIds,\n                });\n            }\n        }\n    );\n\n    const collabDisable = visualBuilderPostMessage?.on(\n        VisualBuilderPostMessageEvents.COLLAB_DISABLE,\n        (data: OnEvent<ICollabConfig>) => {\n            if (data?.data?.collab?.fromShare) {\n                Config.set(\n                    \"collab.pauseFeedback\",\n                    data?.data?.collab?.pauseFeedback\n                );\n                handleRemoveCommentIcons(true);\n                return;\n            }\n\n            Config.set(\"collab.enable\", false);\n            Config.set(\"collab.isFeedbackMode\", false);\n\n            handleRemoveCommentIcons();\n        }\n    );\n\n    const collabThreadRemove = visualBuilderPostMessage?.on(\n        VisualBuilderPostMessageEvents.COLLAB_THREADS_REMOVE,\n        (data: OnEvent<IThreadRemove>) => {\n            const threadUids = data?.data?.threadUids;\n\n            if (!config?.collab?.enable) return;\n\n            if (data?.data?.updateConfig) {\n                Config.set(\"collab.isFeedbackMode\", true);\n            }\n            if (threadUids.length > 0) {\n                threadUids.forEach((threadUid) => {\n                    removeCollabIcon(threadUid);\n                });\n            }\n        }\n    );\n\n    const collabThreadReopen = visualBuilderPostMessage?.on(\n        VisualBuilderPostMessageEvents.COLLAB_THREAD_REOPEN,\n        (data: OnEvent<IThreadReopen>) => {\n            const thread = data.data.thread;\n\n            if (!config?.collab?.enable) return;\n\n            const result = generateThread(thread, {\n                hidden: Boolean(config?.collab?.pauseFeedback),\n            });\n            if (result) {\n                handleMissingThreads({\n                    payload: { isElementPresent: false },\n                    threadUids: [result],\n                });\n            }\n        }\n    );\n\n    const collabThreadHighlight = visualBuilderPostMessage?.on(\n        VisualBuilderPostMessageEvents.COLLAB_THREAD_HIGHLIGHT,\n        (data: OnEvent<IThreadIdentifier>) => {\n            const { threadUid } = data.data;\n            if (!config?.collab?.enable || config?.collab?.pauseFeedback)\n                return;\n\n            HighlightThread(threadUid);\n        }\n    );\n\n    return () => {\n        collabEnable?.unregister();\n        collabPayload?.unregister();\n        collabDisable?.unregister();\n        collabThreadRemove?.unregister();\n        collabThreadReopen?.unregister();\n        collabThreadHighlight?.unregister();\n    };\n};\n"],"mappings":"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","names":["import_generateThread","Config","visualBuilderPostMessage","_a","_b","_c","_d","_e","_f"]}